services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
      target: prod  # 默认生产环境
    ports:
      - "8080:80"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - INIT_DATA=true
    volumes:
      - ./backend/.env:/app/.env
    depends_on:
      - mongo
      - postgres
    ports:
      - "3000:3000"

  mongo:
    image: mongo:6
    volumes:
      - mongo_data:/data/db
      - ./infra/docker/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword123
    ports:
      - "27017:27017"

  postgres:
    image: postgres:16.8-alpine3.20
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=tacticore
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
  postgres_data: